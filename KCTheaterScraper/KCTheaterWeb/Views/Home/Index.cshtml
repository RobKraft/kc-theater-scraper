@model HomeViewModel
@{
    ViewData["Title"] = "Kansas City Theater Events";
}

<div class="row">
    <div class="col-lg-8">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2">
                <i class="fas fa-theater-masks text-primary me-2"></i>
                KC Theater Events
            </h1>
            <div class="btn-group" role="group">
                <a href="@Url.Action("Index", new { viewMode = "list", venue = Model.SelectedVenue, category = Model.SelectedCategory, date = Model.SelectedDate, search = Model.SearchTerm })" 
                   class="btn @(Model.ViewMode == "list" ? "btn-primary" : "btn-outline-primary")">
                    <i class="fas fa-list"></i> List
                </a>
                <a href="@Url.Action("Calendar")" class="btn btn-outline-primary">
                    <i class="fas fa-calendar"></i> Calendar
                </a>
            </div>
        </div>

        <!-- Filters -->
        <div class="card mb-4">
            <div class="card-body">
                <form method="get" class="row g-3">
                    <input type="hidden" name="viewMode" value="@Model.ViewMode" />
                    
                    <div class="col-md-3">
                        <label class="form-label">Venue</label>
                        <select name="venue" class="form-select">
                            <option value="">All Venues</option>
                            @foreach (var venue in Model.Events.Venues)
                            {
                                <option value="@venue" selected="@(venue == Model.SelectedVenue)">@venue</option>
                            }
                        </select>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label">Category</label>
                        <select name="category" class="form-select">
                            <option value="">All Categories</option>
                            @foreach (var category in Model.Events.Categories)
                            {
                                <option value="@category" selected="@(category == Model.SelectedCategory)">@category</option>
                            }
                        </select>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label">Date</label>
                        <input type="date" name="date" class="form-control" value="@Model.SelectedDate?.ToString("yyyy-MM-dd")" />
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label">Search</label>
                        <div class="input-group">
                            <input type="text" name="search" class="form-control" placeholder="Search events..." value="@Model.SearchTerm" />
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </form>
                
                @if (!string.IsNullOrEmpty(Model.SelectedVenue) || !string.IsNullOrEmpty(Model.SelectedCategory) || Model.SelectedDate.HasValue || !string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <div class="mt-3">
                        <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-times"></i> Clear Filters
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Results Summary -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <p class="text-muted mb-0">
                Showing @Model.Events.Events.Count event(s)
                @if (Model.Events.LastUpdated != DateTime.MinValue)
                {
                    <span class="small">â€¢ Last updated: @Model.Events.LastUpdated.ToString("MMM dd, yyyy h:mm tt")</span>
                }
            </p>
        </div>

        <!-- Events List -->
        @if (Model.Events.Events.Any())
        {
            <div class="row">
                @foreach (var theaterEvent in Model.Events.Events.Take(50))
                {
                    <div class="col-12 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h5 class="card-title">
                                            <a href="@Url.Action("Event", new { id = theaterEvent.Id })" class="text-decoration-none">
                                                @theaterEvent.Title
                                            </a>
                                        </h5>
                                        <h6 class="card-subtitle mb-2 text-muted">
                                            <i class="fas fa-map-marker-alt me-1"></i>
                                            <a href="@Url.Action("Venue", new { name = theaterEvent.VenueName })" class="text-decoration-none">
                                                @theaterEvent.VenueName
                                            </a>
                                        </h6>
                                        @if (!string.IsNullOrEmpty(theaterEvent.Description))
                                        {
                                            <p class="card-text">
                                                @(theaterEvent.Description.Length > 150 ? theaterEvent.Description.Substring(0, 150) + "..." : theaterEvent.Description)
                                            </p>
                                        }
                                        @if (!string.IsNullOrEmpty(theaterEvent.Category))
                                        {
                                            <span class="badge bg-secondary">@theaterEvent.Category</span>
                                        }
                                    </div>
                                    <div class="col-md-4 text-md-end">
                                        <div class="mb-2">
                                            <strong class="text-primary">
                                                <i class="fas fa-calendar me-1"></i>
                                                @theaterEvent.FormattedDate
                                            </strong>
                                        </div>
                                        <div class="mb-2">
                                            <i class="fas fa-clock me-1"></i>
                                            @theaterEvent.FormattedTime
                                        </div>
                                        @if (theaterEvent.TicketPrice.HasValue)
                                        {
                                            <div class="mb-2">
                                                <strong class="text-success">$@theaterEvent.TicketPrice.Value.ToString("F2")</strong>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(theaterEvent.TicketUrl))
                                        {
                                            <a href="@theaterEvent.TicketUrl" target="_blank" class="btn btn-sm btn-primary">
                                                <i class="fas fa-ticket-alt me-1"></i>Tickets
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            @if (Model.Events.Events.Count > 50)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Showing first 50 events. Use filters to narrow your search.
                </div>
            }
        }
        else
        {
            <div class="alert alert-warning">
                <h4 class="alert-heading">No events found</h4>
                <p>No theater events match your current filters. Try adjusting your search criteria or check back later for new events.</p>
            </div>
        }
    </div>

    <!-- Sidebar -->
    <div class="col-lg-4">
        <!-- Quick Stats -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Quick Stats</h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-4">
                        <div class="h4 text-primary">@Model.Events.TotalEvents</div>
                        <small class="text-muted">Total Events</small>
                    </div>
                    <div class="col-4">
                        <div class="h4 text-success">@Model.TodaysEvents.Count</div>
                        <small class="text-muted">Today</small>
                    </div>
                    <div class="col-4">
                        <div class="h4 text-info">@Model.ThisWeekEvents.Count</div>
                        <small class="text-muted">This Week</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Today's Events -->
        @if (Model.TodaysEvents.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-calendar-day me-2"></i>Today's Events</h5>
                </div>
                <div class="card-body">
                    @foreach (var todayEvent in Model.TodaysEvents.Take(5))
                    {
                        <div class="mb-2">
                            <strong>@todayEvent.FormattedTime</strong><br>
                            <a href="@Url.Action("Event", new { id = todayEvent.Id })">@todayEvent.Title</a><br>
                            <small class="text-muted">@todayEvent.VenueName</small>
                        </div>
                        @if (!Model.TodaysEvents.Last().Equals(todayEvent))
                        {
                            <hr>
                        }
                    }
                </div>
            </div>
        }

        <!-- Venues -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-building me-2"></i>Venues</h5>
            </div>
            <div class="card-body">
                @foreach (var venue in Model.VenueEventCounts.OrderByDescending(v => v.Value).Take(10))
                {
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <a href="@Url.Action("Index", new { venue = venue.Key })" class="text-decoration-none">
                            @venue.Key
                        </a>
                        <span class="badge bg-primary">@venue.Value</span>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
